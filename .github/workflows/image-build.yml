# References:
# https://some-natalie.dev/blog/kaniko-in-arc/
# https://dev.to/ipo/using-kaniko-to-build-and-publish-container-image-with-github-action-on-github-self-hosted-runners-d5m

name: Image Build
on:
  workflow_dispatch:
  schedule:
  - cron: "0 21 1 * *"
  push:
    paths-ignore:
    - .github/**
    - README.md
    branches:
    - master
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  COMMIT: master

jobs:
  tag:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/library/busybox:latest
    outputs:
      timestamp: ${{ steps.tag.outputs.TAG }}
    steps:
    - name: Set tag
      id: tag
      run: |
        echo TAG=$(date -u +'%Y%m%d.%H%M') | tee -a "$GITHUB_OUTPUT"
  build:
    needs:
      - tag
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: ghcr.io/randomcoww/kaniko:debug
    permissions:
      contents: read
      packages: write
    steps:
    - name: Build and release container
      run: |
        mkdir -p $DOCKER_CONFIG
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF

        /kaniko/executor \
          --dockerfile="./Containerfile" \
          --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
          --destination="ghcr.io/${{ github.repository }}:v${{needs.tag.outputs.timestamp}}" \
          --destination="distribution.default/${{ github.repository }}:v${{needs.tag.outputs.timestamp}}" \
          --build-arg COMMIT=$COMMIT \
          --build-arg INTERNAL_CA_CERT="$INTERNAL_CA_CERT" \
          --skip-unused-stages \
          --target http \
          --push-retry 3
  build-tftp:
    needs:
      - tag
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: ghcr.io/randomcoww/kaniko:debug
    permissions:
      contents: read
      packages: write
    steps:
    - name: Build and release container
      run: |
        mkdir -p $DOCKER_CONFIG
        cat > $DOCKER_CONFIG/config.json <<EOF
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64 -w0)"
            }
          }
        }
        EOF

        /kaniko/executor \
          --dockerfile="./Containerfile" \
          --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
          --destination="ghcr.io/${{ github.repository }}:v${{needs.tag.outputs.timestamp}}-tftp" \
          --build-arg COMMIT=$COMMIT \
          --build-arg INTERNAL_CA_CERT="$INTERNAL_CA_CERT" \
          --skip-unused-stages \
          --target tftp \
          --push-retry 3
  cleanup:
    needs:
      - build
      - build-tftp
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: docker.io/node:current-alpine
    permissions:
      packages: write
    steps:
      - name: Remove old container images
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 6
          token: ${{ secrets.GITHUB_TOKEN }}